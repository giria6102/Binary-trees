 vector <int> zigZagTraversal(Node* root)
    {
    	vector<int>result;
    	queue<Node*>q;
    	q.push(root);
    	
    	if(root==NULL){
    	    return result;
    	}
    	// for left to right and right to left
    	bool flag=true;
    	while(!q.empty()){
    	    int size=q.size();
    	    vector<int>ans(size);
    	   
    	    for(int i=0;i<size;i++){
    	         Node*frontnode=q.front();
    	         q.pop();
    	         int index=flag ? i:size-i-1;
    	         if(flag){
    	             index=i;
    	             ans[index]=frontnode->data;
    	         }
    	         else{
    	             index=size-i-1;
    	             ans[index]=frontnode->data;
    	         }
    	         
    	         if(frontnode->left){
    	             q.push(frontnode->left);
    	         }
    	         if(frontnode->right){
    	             q.push(frontnode->right);
    	         }
    	    }
    	    flag=!flag;
    	    for(auto it:ans){
    	        result.push_back(it);
    	    }
    	}
    	return result;
    	
    }
