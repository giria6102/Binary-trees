int findPosition(int in[],int element,int n){
        
        for(int i=0;i<n;i++){
            if(in[i]==element){
                return i;
            }
        }
        return -1;
    }
Node*solve(int in[],int post[],int &index,int inorderStart , int inorderEnd , int n){
        
        if( index <0 || inorderStart > inorderEnd ){
                return NULL;
        }
        
        int element=post[index--];
        
        Node*root=new Node(element);
        
        int position=findPosition(in,element,n);
        
        root->right=solve(in,post,index,position+1,inorderEnd,n);
        root->left=solve(in,post,index,inorderStart,position-1,n);
        
        
        return root;
        
    }
Node *buildTree(int in[], int post[], int n) {
      int postIndex=n-1;
        
        Node*ans=solve(in,post,postIndex,0,n-1,n);
        
        return ans;
}
